# 🚀 Auto-Healing Pipeline Configuration
# 📅 Criado: 2025-01-27
# 🔧 Tracing ID: AUTO_HEALING_CONFIG_001_20250127
# ⚡ Status: ✅ ENTERPRISE-READY

# =============================================================================
# 🔧 CONFIGURAÇÕES GLOBAIS
# =============================================================================

global:
  version: "3.0.0"
  environment: "production"
  tracing_id: "AUTO_HEALING_CONFIG_001_20250127"
  
  # Configurações de ambiente
  python_version: "3.11"
  node_version: "20"
  
  # Configurações de cache
  cache:
    enabled: true
    ttl: 3600  # 1 hora
    max_size: "2GB"

# =============================================================================
# 🧪 CONFIGURAÇÕES DE TESTES
# =============================================================================

testing:
  # Thresholds de qualidade
  coverage:
    minimum: 80
    target: 85
    fail_below: true
    
  # Configurações de healing
  healing:
    max_attempts: 8
    timeout_per_attempt: 300  # 5 minutos
    enable_auto_pr: true
    preserve_comments: true
    skip_sensitive_files: true
    
  # Configurações de performance
  performance:
    response_time_p95: 500  # ms
    error_rate_max: 0.1     # 10%
    throughput_min: 100     # req/s
    
  # Configurações de segurança
  security:
    bandit_enabled: true
    safety_enabled: true
    gitleaks_enabled: true
    min_security_score: 70

# =============================================================================
# 🤖 CONFIGURAÇÕES DE IA
# =============================================================================

ai:
  # OpenAI Configuration
  openai:
    model: "code-davinci-002"
    max_tokens: 2000
    temperature: 0.1
    top_p: 0.95
    frequency_penalty: 0.0
    presence_penalty: 0.0
    
  # Prompt Engineering
  prompts:
    healing_template: |
      # Auto-Healing Request - {stage}
      
      ## Error Context
      - **Error Type**: {error_type}
      - **Error Message**: {error_message}
      - **File**: {file_path}
      - **Line**: {line_number}
      - **Function**: {function_name}
      
      ## Code Snippet
      ```python
      {code_snippet}
      ```
      
      ## Stack Trace
      ```
      {stack_trace}
      ```
      
      ## Instructions
      Please fix the code to resolve the test failure. Follow these rules:
      1. Preserve existing comments and documentation
      2. Only modify the specific function/class that's failing
      3. Maintain the original code structure and style
      4. Don't delete large code blocks without justification
      5. Don't modify sensitive files (.env, secrets, config files)
      6. Only modify tests if there's a clear inconsistency
      
      Return ONLY the corrected code snippet.

# =============================================================================
# 📦 CONFIGURAÇÕES DE EMPACOTAMENTO
# =============================================================================

packaging:
  # Executável Python
  python_executable:
    enabled: true
    name: "OmniKeywordsFinder"
    entry_point: "backend/app/main.py"
    pyinstaller_options:
      - "--onefile"
      - "--name=OmniKeywordsFinder"
      - "--distpath=dist"
      
  # Plugin WordPress
  wordpress_plugin:
    enabled: true
    source_dir: "wp-plugin"
    output_name: "wordpress-plugin.zip"
    
  # Changelog
  changelog:
    enabled: true
    template: "scripts/generate_changelog.py"
    output_file: "CHANGELOG.md"
    include_patches: true
    include_commits: true

# =============================================================================
# 📢 CONFIGURAÇÕES DE NOTIFICAÇÃO
# =============================================================================

notifications:
  # Slack
  slack:
    enabled: true
    channel: "#devops-alerts"
    webhook_url: "${SLACK_WEBHOOK}"
    template: |
      🚀 **Auto-Healing Pipeline Complete**
      
      **Status**: {status}
      **Branch**: {branch}
      **Commit**: {commit}
      
      **🧪 Test Results**:
      - Unit: {unit_status}
      - Integration: {integration_status}
      - E2E: {e2e_status}
      - Load: {load_status}
      
      **🔒 Quality Gates**:
      - Coverage: {coverage}%
      - Security: {security_score}/100
      
      **🚀 Auto-Healing**:
      - Total Attempts: {total_attempts}
      - Patches: {total_patches}
      
      **📦 Release**: {release_url}
      
  # Discord
  discord:
    enabled: true
    webhook_url: "${DISCORD_WEBHOOK}"
    color_success: 3066993
    color_failure: 15158332

# =============================================================================
# 🔒 CONFIGURAÇÕES DE SEGURANÇA
# =============================================================================

security:
  # Arquivos sensíveis (não modificar)
  sensitive_files:
    - ".env"
    - ".env.*"
    - "secrets.yaml"
    - "config/secrets.yaml"
    - "*.key"
    - "*.pem"
    - "*.p12"
    - "id_rsa"
    - "id_rsa.pub"
    
  # Padrões de secrets
  secret_patterns:
    - "password.*=.*"
    - "secret.*=.*"
    - "token.*=.*"
    - "key.*=.*"
    - "api_key.*=.*"
    - "private_key.*=.*"
    
  # Configurações de auditoria
  audit:
    enabled: true
    log_all_changes: true
    require_human_review: true
    max_auto_merges: 0

# =============================================================================
# 📊 CONFIGURAÇÕES DE MONITORAMENTO
# =============================================================================

monitoring:
  # Métricas a coletar
  metrics:
    - healing_attempts
    - patches_created
    - prs_created
    - test_success_rate
    - coverage_percentage
    - security_score
    - response_time_p95
    - error_rate
    
  # Dashboards
  dashboards:
    - name: "Auto-Healing Overview"
      url: "https://grafana.company.com/d/auto-healing"
    - name: "Performance Metrics"
      url: "https://grafana.company.com/d/performance"
      
  # Alertas
  alerts:
    - name: "High Error Rate"
      condition: "error_rate > 0.1"
      channels: ["slack", "discord"]
    - name: "Low Coverage"
      condition: "coverage < 80"
      channels: ["slack"]
    - name: "Security Issues"
      condition: "security_score < 70"
      channels: ["slack", "discord"]

# =============================================================================
# 🗄️ CONFIGURAÇÕES DE BANCO DE DADOS
# =============================================================================

database:
  # PostgreSQL
  postgresql:
    version: "15"
    database: "omni_keywords_test"
    user: "test_user"
    password: "test_password"
    host: "localhost"
    port: 5432
    
  # Redis
  redis:
    version: "7-alpine"
    host: "localhost"
    port: 6379
    database: 0

# =============================================================================
# 🔧 CONFIGURAÇÕES DE DEPENDÊNCIAS
# =============================================================================

dependencies:
  # Python
  python:
    requirements_file: "requirements.txt"
    additional_packages:
      - "pytest"
      - "pytest-cov"
      - "pytest-html"
      - "pytest-xdist"
      - "openai"
      - "gitpython"
      - "requests"
      - "bandit"
      - "safety"
      - "pyinstaller"
      
  # Node.js
  nodejs:
    package_file: "package.json"
    additional_packages:
      - "k6"
      
  # Sistema
  system:
    packages:
      - "build-essential"
      - "libpq-dev"
      - "libssl-dev"
      - "libffi-dev"
      - "python3-dev"
      - "php-cli"
      - "php-mysql"
      - "nodejs"
      - "npm"
      - "zip"
      - "unzip"
      - "curl"
      - "wget"
      - "git"

# =============================================================================
# 🚀 CONFIGURAÇÕES DE DEPLOY
# =============================================================================

deployment:
  # GitHub Release
  github_release:
    enabled: true
    draft: false
    prerelease: false
    generate_release_notes: true
    
  # Artefatos
  artifacts:
    - "dist/OmniKeywordsFinder"
    - "wordpress-plugin.zip"
    - "CHANGELOG.md"
    - "logs/*_healing_report.json"
    - "patches/**/*.diff"
    
  # Versioning
  versioning:
    strategy: "semantic"
    bump_patch: true
    tag_prefix: "v"

# =============================================================================
# 🔍 CONFIGURAÇÕES DE DEBUG
# =============================================================================

debug:
  # Logging
  logging:
    level: "INFO"
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    file: "logs/auto_healing.log"
    max_size: "10MB"
    backup_count: 5
    
  # Verbose mode
  verbose: false
  
  # Dry run mode
  dry_run: false
  
  # Test mode
  test_mode: false

# =============================================================================
# 📈 CONFIGURAÇÕES DE PERFORMANCE
# =============================================================================

performance:
  # Timeouts
  timeouts:
    test_execution: 300    # 5 minutos
    healing_attempt: 300   # 5 minutos
    api_request: 30        # 30 segundos
    git_operation: 60      # 1 minuto
    
  # Concurrency
  concurrency:
    max_parallel_jobs: 4
    max_parallel_tests: 2
    
  # Resource limits
  resources:
    memory_limit: "2GB"
    cpu_limit: "2"
    disk_space: "5GB"

# =============================================================================
# 🎯 CONFIGURAÇÕES DE OBJETIVOS
# =============================================================================

objectives:
  # KPIs
  kpis:
    success_rate: 0.95      # 95%
    resolution_time: 1800   # 30 minutos
    coverage_minimum: 0.80  # 80%
    security_score: 70      # 70/100
    
  # SLAs
  slas:
    pipeline_duration: 3600  # 1 hora
    healing_response: 300    # 5 minutos
    notification_delay: 60   # 1 minuto
    
  # SLOs
  slos:
    availability: 0.999      # 99.9%
    error_rate: 0.01        # 1%
    response_time: 500      # 500ms

# =============================================================================
# 🔄 CONFIGURAÇÕES DE RETRY
# =============================================================================

retry:
  # Estratégias de retry
  strategies:
    exponential_backoff:
      enabled: true
      initial_delay: 1
      max_delay: 60
      multiplier: 2
      
    linear_backoff:
      enabled: false
      delay: 5
      
  # Condições de retry
  conditions:
    - "network_error"
    - "timeout_error"
    - "rate_limit_error"
    - "temporary_failure"
    
  # Máximo de tentativas
  max_attempts: 3

# =============================================================================
# 📋 CONFIGURAÇÕES DE VALIDAÇÃO
# =============================================================================

validation:
  # Validações pré-execução
  pre_execution:
    - "check_secrets_configured"
    - "check_api_keys_valid"
    - "check_repository_access"
    - "check_disk_space"
    
  # Validações pós-execução
  post_execution:
    - "validate_artifacts"
    - "validate_coverage"
    - "validate_security"
    - "validate_performance"
    
  # Validações de rollback
  rollback:
    enabled: true
    triggers:
      - "critical_error"
      - "security_violation"
      - "performance_degradation"
    actions:
      - "revert_changes"
      - "notify_team"
      - "create_incident"

# =============================================================================
# 🎨 CONFIGURAÇÕES DE UI/UX
# =============================================================================

ui:
  # Cores para notificações
  colors:
    success: "#00ff00"
    warning: "#ffff00"
    error: "#ff0000"
    info: "#0000ff"
    
  # Emojis
  emojis:
    success: "✅"
    warning: "⚠️"
    error: "❌"
    info: "ℹ️"
    rocket: "🚀"
    robot: "🤖"
    test: "🧪"
    security: "🔒"
    package: "📦"
    notification: "📢"
    
  # Templates de mensagem
  message_templates:
    success: "🎉 {stage} completed successfully!"
    failure: "💥 {stage} failed: {error}"
    warning: "⚠️ {stage} completed with warnings"
    info: "ℹ️ {stage} in progress..."

# =============================================================================
# 🔧 CONFIGURAÇÕES DE MANUTENÇÃO
# =============================================================================

maintenance:
  # Limpeza automática
  cleanup:
    enabled: true
    schedule: "0 2 * * *"  # 2 AM daily
    retention_days: 30
    targets:
      - "logs/*.log"
      - "patches/**/*.diff"
      - "test-results/*.xml"
      - "coverage/*.xml"
      
  # Backup
  backup:
    enabled: true
    schedule: "0 1 * * *"  # 1 AM daily
    retention_days: 90
    targets:
      - "logs/"
      - "patches/"
      - "config/"
      
  # Health checks
  health_checks:
    enabled: true
    interval: 300  # 5 minutos
    endpoints:
      - "/health"
      - "/api/health"
      - "/metrics"

